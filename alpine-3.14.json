{
  "variables": {
    "base_pkgs": "bash sudo curl wget shadow git zsh libuser virtualbox-guest-additions rsync wireguard-tools git automake docker docker-cli go ripgrep pkgconf jo jq nagios-plugins-icmp nagios-plugins-tcp ttyd",
    "apk_add_args": "--progress",
    "vm_name": "{{user `vm_name` }}",
    "apk_proxy_host": "{{user `APK_PROXY_HOST`}}",
    "apk_proxy_port": "{{user `APK_PROXY_PORT`}}",
    "root_password": "vagrant",
    "ssh_password": "vagrant",
    "ssh_username": "vagrant",
    "output_path": "./output",
    "cpus": "{{user `CPUS`}}",
    "disk_size": "{{user `DISK_MB`}}",
    "iso_checksum": "d568c6c71bb1eee0f65cdf40088daf57032e24f1e3bd2cf8a813f80d2e9e4eab",
    "iso_checksum_type": "sha256",
    "iso_download_url": "http://dl-cdn.alpinelinux.org/alpine/v3.14/releases/x86_64/alpine-virt-3.14.0-x86_64.iso",
    "iso_local_url": "../../iso/alpine-virt-3.14.0-x86_64.iso",
    "memory": "{{user `MB`}}",
    "ssh_key": "ssh-rsa {{user `SSH_PUBLIC_RSA_KEY`}} packer",
    "ssh_key1": "ssh-rsa {{user `SSH_PUBLIC_RSA_KEY1`}} whmcs@web1.vpnservice.company"
  },
  "builders": [
    {
      "type": "virtualbox-iso",
      "boot_command": [
        "root<enter><wait>",
        "ifconfig eth0 up && udhcpc -i eth0<enter><wait5>",
        "wget http://{{ .HTTPIP }}:{{ .HTTPPort }}/answers<enter><wait>",
        "setup-apkrepos -1<enter><wait5>",
        "ERASE_DISKS='/dev/sda' setup-alpine -f $PWD/answers<enter><wait5>",
        "{{user `ssh_password`}}<enter><wait>",
        "{{user `ssh_password`}}<enter><wait30>",
        "mount /dev/sda3 /mnt<enter>",
        "echo 'PermitRootLogin yes' >> /mnt/etc/ssh/sshd_config<enter>",
        "umount /mnt ; reboot<enter>"
      ],
      "boot_wait": "30s",
      "communicator": "ssh",
      "disk_size": "{{user `disk_size`}}",
      "format": "ova",
      "guest_additions_mode": "disable",
      "guest_os_type": "Linux26_64",
      "headless": "{{user `HEADLESS`}}",
      "http_directory": "http",
      "iso_checksum": "{{user `iso_checksum_type`}}:{{user `iso_checksum`}}",
      "iso_urls": ["{{user `iso_local_url`}}", "{{user `iso_download_url`}}"],
      "keep_registered": "false",
      "shutdown_command": "/sbin/poweroff",
      "ssh_password": "{{user `ssh_password`}}",
      "ssh_timeout": "5m",
      "ssh_username": "root",
      "vboxmanage": [
        ["modifyvm", "{{.Name}}", "--memory", "{{user `memory`}}"],
        ["modifyvm", "{{.Name}}", "--cpus", "{{user `cpus`}}"],
        ["modifyvm", "{{.Name}}", "--rtcuseutc", "on"],
        ["modifyvm", "{{.Name}}", "--graphicscontroller", "vmsvga"],
        ["modifyvm", "{{.Name}}", "--vram", "6"],
        ["modifyvm", "{{.Name}}", "--vrde", "off"],
        ["modifyvm", "{{.Name}}", "--nic1", "nat"],
        ["modifyvm", "{{.Name}}", "--natpf1", "sshd,tcp,,45890,,22"],
        ["modifyvm", "{{.Name}}", "--uart1", "0x3F8", "4"],
        ["modifyvm", "{{.Name}}", "--uartmode1", "file", "/tmp/console-xxxxxxxxNAMExxxxxxxxxxx.log"]        
      ],
      "vm_name": "{{user `vm_name`}}"
    }
  ],
  "description": "Alpine Linux x86_64",
  "provisioners": [
    {
      "inline": [
        "cp /etc/hosts /etc/hosts-orig",
        "echo '{{user `apk_proxy_host`}} dl-cdn.alpinelinux.org' >> /etc/hosts",
        "",
        "echo http://dl-cdn.alpinelinux.org/alpine/v3.14/main > /etc/apk/repositories-orig",
        "echo http://dl-cdn.alpinelinux.org/alpine/v3.14/community >> /etc/apk/repositories-orig",
        "",
        "echo http://dl-cdn.alpinelinux.org:{{user `apk_proxy_port`}}/alpine/v3.14/main > /etc/apk/repositories",
        "echo http://dl-cdn.alpinelinux.org:{{user `apk_proxy_port`}}/alpine/v3.14/community >> /etc/apk/repositories",
        "",
        "apk update",
        "apk list > /.apk",
        "apk add {{user `apk_add_args`}} {{user `base_pkgs`}} {{user `PKGS`}}",
        "",
        "command -v npm && npm i -g nodemon fx",
        "command -v pip3 && pip3 install json2yaml j2cli",
        "",
        "echo -e 'export GIT_SSH_COMMAND=\"ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\"' >> /etc/profile.d/git.sh",
        "",
        "command -v containerd && rc-update add containerd default",
        "command -v docker && rc-update add docker default",
        "command -v VBoxService && rc-update add virtualbox-guest-additions",
        "",
        "command -v make && command -v git && git clone --recurse-submodules https://github.com/binRick/netns-exec /usr/src/netns-exec && cd /usr/src/netns-exec && apk add iptables-dev && make install",
        "apk add ttyd && command -v go && go get github.com/Depau/ttyc/cmd/ttyc",
        "command -v go && env GO111MODULE=on go install github.com/DarthSim/hivemind@latest",
        "",
        "command -v autoreconf && command -v git && git clone https://github.com/binRick/bwrap-oci /usr/src/bwrap-oci && cd /usr/src/bwrap-oci && ./autogen.sh && ./configure --prefix=/usr && make -j && make install && bwrap-oci --help",
        "command -v git && git clone https://github.com/13-CF/afetch /usr/src/afetch && cd /usr/src/afetch && make && cp afetch /usr/bin && /usr/bin/afetch | tee /etc/motd",
        "source /etc/profile.d/git.sh && git clone git@github.com:binRick/ansi.git /usr/src/ansi && cd /usr/src/ansi && cp ansi.sh /usr/bin/ && ln -s /usr/bin/ansi.sh /usr/bin/ansi",
        "",
        "echo '%wheel ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/wheel",
        "",
        "adduser {{user `ssh_username`}} --disabled-password",
        "echo '{{user `ssh_username`}}:{{user `ssh_password`}}' | chpasswd",
        "adduser {{user `ssh_username`}} wheel",
        "cd ~{{user `ssh_username`}}/.",
        "mkdir ~{{user `ssh_username`}}/.ssh",
        "mkdir -p ~root/.ssh",
        "chmod 700 ~{{user `ssh_username`}}/.ssh",
        "chmod 700 /root/.ssh",
        "echo {{user `ssh_key`}} > .ssh/authorized_keys",
        "echo {{user `ssh_key`}} > /root/.ssh/authorized_keys",
        "echo {{user `ssh_key1`}} >> .ssh/authorized_keys",
        "echo {{user `ssh_key1`}} >> /root/.ssh/authorized_keys",
        "chown -R {{user `ssh_username`}} ~{{user `ssh_username`}}/",
        "chown -R root ~root/",
        "",
        "wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O /tmp/oh-my-zsh-install.sh",
        "sh /tmp/oh-my-zsh-install.sh --unattended",
        "mv /root/.zshrc /root/.zshrc-orig",
        "echo -e 'ZSH_THEME=\"{{user `ZSH_THEME`}}\"' > /root/.zshrc",
        "echo -e 'plugins=()' >> /root/.zshrc",
        "cat /root/.zshrc-orig|egrep -v '^ZSH_THEME=|^plugins=' >> /root/.zshrc",
        "command -v git && git clone https://github.com/binRick/zsh-alpine-theme /usr/src/zsh-alpine-theme && cp /usr/src/zsh-alpine-theme/alpine.zsh-theme ~/.oh-my-zsh/themes/.",
        "command -v zsh && command -v chsh && echo {{user `root_password`}} | chsh -s /bin/zsh root",
        "",
        "echo -e 'alias vi=vim' >> /etc/profile.d/vim.sh",
        "",
        "echo 'SYSLOGD_OPTS=\"-t -C\"' > /etc/conf.d/syslog",
        "",
        "#echo -e '* * * * * ping -W 5 -c 1 -w 5 -t 5 10.192.224.1' >> /etc/crontabs/root",
        "",
        "echo -e 'export GRPC_HOST={{user `GRPC_HOST`}} GRPC_PORT={{user `GRPC_PORT`}}' >> /etc/profile.d/guard.sh",
        "",
        "echo -e 'export PATH=\"$PATH:$(eval echo ~/go/bin)\"' > /etc/profile.d/gopath.sh",
        "",
        "GO111MODULE=on go get -u github.com/DarthSim/overmind/v2",
        "",
        "rc-service syslog restart",
        "",
        "source /etc/profile.d/git.sh && git clone ssh://git@git.vpntech.net:root/guard.git /usr/src/guard && cd /usr/src/guard && make install",
        "command -v direnv &&  echo 'eval \"$(direnv hook zsh)\"' >> /etc/profile.d/direnv.sh",
        "",
        "mv /etc/hosts-orig /etc/hosts",
        "mv /etc/apk/repositories-orig /etc/apk/repositories",
        "command -v df && df -h /",
        "command -v afetch && afetch",
        ""        
      ],
      "type": "shell"
    }
  ]
}
